unbind-key C-b

set-option -g prefix C-Space
bind C-Space send-prefix

# set -sg escape-time 0
set -sg escape-time 50

set -g base-index 1
setw -g pane-base-index 1

setw -g mode-keys vi # use vi keys for copying

unbind v
unbind s
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

unbind '"'
unbind %
bind-key c new-window -c "#{pane_current_path}"
bind-key C new-window

# M-hjkl to navigate windows
# bind -n M-h select-pane -L
# bind -n M-j select-pane -D
# bind -n M-k select-pane -U
# bind -n M-l select-pane -R

bind-key -r C-h resize-pane -L 2
bind-key -r C-j resize-pane -D 2
bind-key -r C-k resize-pane -U 2
bind-key -r C-l resize-pane -R 2

bind -n M-. next-window
bind -n M-, previous-window
bind -n M-/ last-window
bind Space last-window

# bind -n M-f resize-pane -Z
bind -n M-\; last-pane

bind -n M-] next-layout
bind -n M-[ previous-layout

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel

bind-key e choose-tree -Zs

bind r source ~/.tmux.conf\; display "~/.tmux.conf sourced!"
bind i last

# Set the foreground colour.  The colour is one of: black, red, green,
# yellow, blue, magenta, cyan, white; if supported the bright variants
# brightred, brightgreen, brightyellow; colour0 to colour255 from the
# 256-colour set; default for the de‐ fault colour; terminal for the
# terminal default colour; or a hexadecimal RGB string such as ‘#ffffff’.
# set -g window-status-current-style fg=magenta

# set -g status-bg white
set -g status-bg default
# set -g status-bg blue
# set -g status-fg cyan
# set -g window-status-current-style fg=magenta

setw -g window-status-current-format "#[reverse] #I:#W"
set -g status-left " #S ->"
set -g status-left-length 26
# set -g status-left-style fg=#eee8d5,bold,bg=#6700b5
# set -g window-status-current-style fg=#eee8d5,bold,bg=#b58900
set -g status-left-style fg=white,bold

set -g window-status-current-style fg=magenta,bold
set -g window-status-current-format "#{?window_last_flag,`, }#{?window_zoomed_flag,[,}#I:#W#{?window_zoomed_flag,],}#{?window_last_flag,`, }"

set -g window-status-style fg=#5c6370
set -g window-status-format "#{?window_last_flag,`, }#{?window_zoomed_flag,[,}#I:#W#{?window_zoomed_flag,],}#{?window_last_flag,`, }"
# set -g status-style fg=colour241,bg=colour233


# nvim's checkhealth told me to do so
set-option -g focus-events on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'M-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'M-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'M-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'M-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'M-h' select-pane -L
# bind-key -T copy-mode-vi 'M-j' select-pane -D
# bind-key -T copy-mode-vi 'M-k' select-pane -U
# bind-key -T copy-mode-vi 'M-l' select-pane -R
# bind-key -T copy-mode-vi 'M-\' select-pane -l

bind-key 'h' select-pane -L
bind-key 'j' select-pane -D
bind-key 'k' select-pane -U
bind-key 'l' select-pane -R

bind-key 'o' last-window

bind-key -n 'M-1' select-window -t 1
bind-key -n 'M-2' select-window -t 2
bind-key -n 'M-3' select-window -t 3
bind-key -n 'M-4' select-window -t 4
bind-key -n 'M-4' select-window -t 4
bind-key -n 'M-5' select-window -t 5
bind-key -n 'M-6' select-window -t 6
bind-key -n 'M-7' select-window -t 7
bind-key -n 'M-8' select-window -t 8
bind-key -n 'M-9' select-window -t 9

# set-option -g status-position bottom
set -g mouse on
set -g renumber-windows
